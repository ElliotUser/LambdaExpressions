                                Некоторые примеры лямбда-выражений.
    Результат, выводимый данной программой.

Число 10 четное.
Число 9 нечетное.
Число 1 неотрицательное.
Число -1 отрицательное.

    В данном примере программы демонстрируется главная особенность лямбда-выражений, требующая более подробного
рассмотрения. Обратите особое внимание на лямбда-выражение, выполняющее проверку на равенство:

(n) -> (n % 2) == 0;

    Обратите внимание на то, что тип переменной n не указан, но выводится из контекста. В данном случае тип перемен-
ной n выводится из тина int параметра метода test(), определяемого в функциональном интерфейсе NumericTest. Впрочем,
никто пе мешает явно указать, тип параметра в лямбда-выражении. Например, следующее лямбда-выражение так же достоверно,
как и предыдущее:

(int n) -> (n % 2)==0;

    где параметр n явно указывается как int. Как правило, явно указывать тип параме­тров лямбда-выражений необязательно,
хотя в некоторых случаях это может вес же потребоваться.
    В данном примере программы демонстрируется еще одна важная особенность лямбда-выражений. Ссылка на функциональный
интерфейс может быть использована для выполнения любого совместимого с ней лямбда-выражения. Обратите внимание на то,
что в данной программе определяются два разных лямбда-выражения, совместимых с методом test() из функционального интер-
фейса NumericTest. В первом лямбда-выражении isNonNeg проверяется, яв­ляется ли числовое значение отрицательным, а во
втором лямбда-выражении isNonNeg - является ли оно неотрицательным. Но в любом случаи проверяется значение параметра n.
А поскольку каждое из этих лямбда-выражений совместимо с методом test(), то оно выполняется по ссылке на функциональный
интерфейс NumericTest.

    Если у лямбда-выражения имеется единственный параметр, его совсем не обязательно заключать в круглые скобки в левой
части лямбда-оператора. Например, приве­денный ниже способ написания лямбда-выражения также допустим в программах.

n -> (n % 2)==0;