                                    Обобщенные функциональные интерфейсы.
    Указывать параметры типа в самом лямбда-выражении нельзя. Следовательно, лямбда-выражение не может быть обобщенным.
(Безусловно, все лямбда-выраже­ния проявляют в той или иной мере свойства, подобные обобщениям, благодаря выведению
типов.) А вот функциональный интерфейс, связанный с лямбда-выра­жением, может быть обобщенным. В этом случае целевой тип
лямбда-выражения отчасти определяется аргументом типа или теми аргументами, которые указыва­ются при объявлении ссылки
на функциональный интерфейс.
    Чтобы понять и оценить значение обобщенных функциональных интерфей­сов, вернемся к двум примерам из предыдущего
раздела. В них применялись два разных функциональных интерфейса: NumericFunc и StringFunc. Но в обоих этих интерфейсах
был определен метод func(), возвращавший результат. В первом случае этот метод принимал параметр и возвращал значение
типа int, а во втором случае - значение типа String. Следовательно, единственное отличие обоих вариантов этого метода
состояло в типе требовавшихся данных. Вместо того чтобы объявлять два функциональных интерфейса, методы которых отлича-
ются только типом данных, можно объявить один обобщенный интерфейс, кото­рый можно использовать в обоих случаях.

Пример.
    Результат выводимый данной программой.

Лямбда обращается на адбмяЛ
Выражение обращается на еинежарыВ

Факториал числа 0 равен 1
Факториал числа 3 равен 6
Факториал числа 5 равен 120

    В данном примере программы обобщенный функциональный интерфейс SomeFunc объявляется следующим образом:

interface SomeFunc<T>{
    Т func(T t);
}

    где Т обозначает как возвращаемый тип, так и тип параметра метода func(). Это означает, что он совместим с любым
лямбда-выражением, принимающим один параметр и возвращающим значение того же самого типа.
    Обобщенный функциональный интерфейс SomeFunc служит для предоставления ссылки на два разных типа лямбда-выражений.
В первом из них используется тип String, а во втором - тип Integer. Таким образом, один и тот же интерфейс может быть
использован для обращения к обоим лямбда-выражениям - reverse и factorial. Отличается лишь аргумент типа, передаваемый
обобщенному функциональному интерфейсу SomeFunc.
