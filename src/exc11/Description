                                         Ссылки на методы.
    С лямбда-выражениями связано еще одно очень важное средство, называемое ссылкой на метод. Такая ссылка
позволяется обращаться к методу, не вызывая его. Она связана с лямбда-выражениями потому, что ей также тре-
буется контекст целевого типа, состоящий из совместимого функционального интерфейса.




                                    Ссылки на статические методы.
    Для создания ссылки на статический метод служит следующая общая форма:

имя_класса::имя_метода.

    Обратите внимание на то, что имя класса в этой форме отделяется от имени метода двумя двоеточиями(::).
Этот новый разделитель внедрен в версии JDК 8 специально для данной цели. Такой ссылкой на метод можно
пользоваться везде, где она совместима со своим целевым типом.


Пример.
    В следующем примере программы демонстрируется применение ссылки на ста­тический метод.
    В данной программе особое внимание обратите на следующую строку кода:

outStr = stringOp(MyStringOps::strReverse, inStr) ;

    В этой строке кода ссылка на статический метод strReverse(), объявляе­ мый в классе MyStringOps, переда-
ется первому аргументу метода stringOp(). И это вполне допустимо, поскольку метод strReverse() совместим с
функциональным интерфейсом StringFunc. Следовательно, в выражении MyStringOps : : strReverse вычисляется
ссылка на объект того класса, в котором метод strReverse() предоставляет реализацию метода func() из функци-
онального интерфейса StringFunc.
