                                 Ссылки на конструкторы.
    В представленных выше примерах был продемонстрирован механизм применения ссылки на конструктор, но на
практике они подобным образом не используются, поскольку это не приносит никаких выгод. Более того, наличие
двух обозначений одного и того же конструктора приводит, по меньшей мере, к конфликтной ситуации. Поэтому с
целью продемонстрировать более практический пример применения ссылок на конструкторы в приведенной ниже про-
грамме применяется статический метод myClassFactory(), который является фабричным для объектов класса любого
типа, реализующего интерфейс MyFunc. С помощью этого метода можно создать объект любого типа, имеющего кон-
структор, совместимый с его первым параметром.

Пример.
    Результат выводимый программой.

Значение val в объекте mc равно 100.1
Значение str в объекте mc2 равно Лямбда

    Как видите, метод myClassFactory() используется для создания объектов типа MyClass<Double> и MyClass2.
Несмотря на отличия в обоих классах, в частности, класс MyClass является обобщенным, а класс MyClass2 - нео-
бобщенным, объекты обоих классов могут быть созданы с помощью фабричного метода myClass Factory(), поскольку
оба они содержат конструкторы, совместимые с методом func() из функционального интерфейса MyFunc, а методу
myClassFactory() передается конструктор того класса, объект которого требуется создать.