                                         Ссылки на конструкторы.
   Ссылки на конструкторы можно создавать таким же образом, как и ссылки на методы.

имя_класса::new

    Эта ссылка может присвоена любой ссылке на функциональный интерфейс, в котрой определен метод, совместимый с
конструктором.

Пример.
    В данном примере программы обратите внимание на то, что метод func ( ) из интерфейса MyFunc возвращает ссылку
на тип MyClass и принимает параметр типа int. Обратите также внимание на то, что в классе MyClass определяются два
конструктора. В первом конструкторе указывается параметр типа int, а второй является конструктором по умолчанию и
поэтому не имеет параметров. А теперь проанализируем следующую строку кода:

MyFunc myClassCons = MyClass::new;

    В этой строке кода создается ссылка на конструктор класса MyClass в выражении MyClass::new. В данном случае
ссылка делается на конструктор MyClass(int v), поскольку метод func() из интерфейса MyFunc принимает параметр типа
int, а с ним совпадает именно этот конструктор. Обратите также внимание на то, что ссылка на этот конструктор при-
сваивается переменной myClassCons ссылки на функциональный интерфейс MyFunc. После выполнения данной строки кода
переменную myClassCons можно использовать для создания экземпляра класса MyClass, как показано ниже. По существу,
переменная mnyClassCons предоставляет еще один способ вызвать конструктор MyClass(int v).

MyClass mc = myClassCons.func(1OO);