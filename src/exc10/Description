                                Лямбда-выражения и захват переменных.
    Переменные, определенные в объемлющей области действия лямбда-выражения, доступны в этом выражении. Например,
в лямбда-выражении можно использовать переменные экземпляра или статическую переменную, определяемую в объемлющем
его классе. В лямбда-выражении доступен также по ссылке this вызывающий экземпляр объемлющего его класса. В лямбда-
выражении можно получить или установить значение переменной экземпляра или статической переменной и вызвать метод
из объемлющего его класса.
    Но если в лямда-выражении используется локальная переменная из объемлющей его области дейсвия, то возникает
особый случай, называемый захватом переменной. В этом случае в лямбда-выражении можно использовать только те
локальные переменные, которые действительно являются завершенными. Действительно завершенной считается та перемен-
ная, значение которой не изменяется после его первого присваивания. Такую переменную не обязательно объявлять как
final.
    Следует, однако, иметь в виду, что локальная переменная из объемлющей области действия не может быть видоизме-
нена в лямбда-выражении. Ведь это нару­шило бы ее действительно завершенное состояние, а следовательно, привело бы
к недопустимому ее захвату.



Пример.
    В следующем примере программы демонстрируется отличие действительно ко­нечных переменных от изменяемых локальных
переменных.
    Переменная num является действительно завершенной, и поэтому ее можно использовать в лямб­да-выражении myLambda.
Но если попытаться видоизменить переменную num как в самом лямбда-выражении, так и за его пределами, то она утратит
свое действительно завершенное состояние. Это привело бы к ошибке, а программа не подле­жала бы компиляции.
    В лямбда-выражении можно использовать и видоизменять переменную экземпляра из вызывающего его класса. Но нельзя
использовать локальную переменную из объемлющей его области действия, если только эта переменная не является дей-
ствительно завершенной.